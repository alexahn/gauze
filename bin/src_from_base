#!/bin/zsh

set -e

# delete environment directory
rm -rf src/environment
# unlink environment
node src/kernel/bin/module.js src/index.js unjoin environment directory

# delete gauze
npx gauze delete gauze ./src ./gauze/gauze.js
# use stage6 schema
cp -r ./src/kernel/src/stages/stage6/* ./src/

# delete entity
npx gauze delete entity ./src ./gauze/entity.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete agent_character
npx gauze delete entity ./src ./src/kernel/src/entities/agent_character.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete agent_person
npx gauze delete entity ./src ./src/kernel/src/entities/agent_person.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete agent_user
npx gauze delete entity ./src ./src/kernel/src/entities/agent_user.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete agent_account
npx gauze delete entity ./src ./src/kernel/src/entities/agent_account.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete agent_root
npx gauze delete entity ./src ./src/kernel/src/entities/agent_root.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete proxy
npx gauze delete entity ./src ./src/kernel/src/entities/proxy.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete session
npx gauze delete entity ./src ./src/kernel/src/entities/session.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete secret
npx gauze delete entity ./src ./src/kernel/src/entities/secret.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# delete blacklist
npx gauze delete gauze ./src ./src/kernel/src/entities/blacklist.js
# use stage4 schema
cp -r ./src/kernel/src/stages/stage4/* ./src/

# delete whitelist
npx gauze delete gauze ./src ./src/kernel/src/entities/whitelist.js
# use stage3 schema
cp -r ./src/kernel/src/stages/stage3/* ./src/

# delete relationship
npx gauze delete gauze ./src ./src/kernel/src/entities/relationship.js
# use stage2 schema
cp -r ./src/kernel/src/stages/stage2/* ./src/

# delete ytitne
npx gauze delete gauze ./src ./gauze/ytitne.js
# use stage1 schema
cp -r ./src/kernel/src/stages/stage1/* ./src/

# delete ezuag
npx gauze delete gauze ./src ./gauze/ezuag.js
# use stage0 schema
cp -r ./src/kernel/src/stages/stage0/* ./src/

##########################################################

# create ezuag
npx gauze create gauze ./src ./gauze/ezuag.js
# use stage1 schema
cp -r ./src/kernel/src/stages/stage1/* ./src/

# create ytitne
npx gauze create entity ./src ./gauze/ytitne.js
# use stage2 schema
cp -r ./src/kernel/src/stages/stage2/* ./src/

# create relationship
npx gauze create gauze ./src ./src/kernel/src/entities/relationship.js
# use stage3 schema
cp -r ./src/kernel/src/stages/stage3/* ./src/

# create whitelist
npx gauze create gauze ./src ./src/kernel/src/entities/whitelist.js
# use stage4 schema
cp -r ./src/kernel/src/stages/stage4/* ./src/

# create blacklist
npx gauze create gauze ./src ./src/kernel/src/entities/blacklist.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create secret
npx gauze create entity ./src ./src/kernel/src/entities/secret.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create session
npx gauze create entity ./src ./src/kernel/src/entities/session.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create proxy
npx gauze create entity ./src ./src/kernel/src/entities/proxy.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create agent_root
npx gauze create entity ./src ./src/kernel/src/entities/agent_root.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create agent_account
npx gauze create entity ./src ./src/kernel/src/entities/agent_account.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create agent_user
npx gauze create entity ./src ./src/kernel/src/entities/agent_user.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create agent_person
npx gauze create entity ./src ./src/kernel/src/entities/agent_person.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create agent_character
npx gauze create entity ./src ./src/kernel/src/entities/agent_character.js
# use stage5 schema
cp -r ./src/kernel/src/stages/stage5/* ./src/

# create gauze
npx gauze create entity ./src ./gauze/entity.js
# use stage6 schema
cp -r ./src/kernel/src/stages/stage6/* ./src/

# create gauze
npx gauze create gauze ./src ./gauze/gauze.js
# use stage7 schema
cp -r ./src/kernel/src/stages/stage7/* ./src/

#cp -r ./src/kernel/src/environment/* ./src/environment/]

# create environment directory
cp -r ./src/kernel/src/environment ./src/environment
# link environment
node src/kernel/bin/module.js src/index.js join environment directory

##########################################################

# class replacement for internal types
find ./src/system/models/relationship.js -type f -name '*.js' -exec sed -i '' "s/kernel.models.system.SystemModel/kernel.models.relationship.RelationshipSystemModel/g" {} +
find ./src/system/models/whitelist.js -type f -name '*.js' -exec sed -i '' "s/kernel.models.system.SystemModel/kernel.models.access.AccessSystemModel/g" {} +
find ./src/system/models/blacklist.js -type f -name '*.js' -exec sed -i '' "s/kernel.models.system.SystemModel/kernel.models.access.AccessSystemModel/g" {} +
