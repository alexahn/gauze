#!/bin/zsh

if [ $# -eq 0 ]
  then
    echo "No arguments supplied"
    exit 1
fi

if [ -z "$1" ]
  then
    echo "No gauze base path argument supplied"
    exit 1
fi

if [ -z "$2" ]
  then
    echo "No gauze project path argument supplied"
    exit 1
fi

if [ -z "$3" ]
  then
    echo "No entity name argument supplied"
    exit 1
fi

gauze_root=$1
project_root=$2
base=$gauze_root/kernel/src/base
staging=$gauze_root/kernel/src/staging

arg1=$(echo "$3" | node $gauze_root/kernel/bin/format_string.js lower_snake_case)
#echo "arg1: $arg1"
arg2=$(echo "$arg1" | node $gauze_root/kernel/bin/format_string.js pascal_snake_case)
#echo "arg2: $arg2"
arg3=$(echo "$arg1" | node $gauze_root/kernel/bin/format_string.js upper_snake_case)
#echo "arg3: $arg3"
arg4=$(echo "$arg1" | node $gauze_root/kernel/bin/format_string.js pascal_case)
#echo "arg4: $arg4"

# create staging directory
cp -r $base $staging

find $staging -type f -name '*.js' -exec sed -i '' "s/a2b8dbc3427b41a9899e11671c2422c7/$arg1/g" {} +
find $staging -type f -name '*.js' -exec sed -i '' "s/ba381b0cc764c4c9a187b716ae94ed96/$arg2/g" {} +
find $staging -type f -name '*.js' -exec sed -i '' "s/cd637bc32c364580be5cc28396d3dee8/$arg3/g" {} +
find $staging -type f -name '*.js' -exec sed -i '' "s/d741787fe14145d79bbdd8ad8057ca28/$arg4/g" {} +

find $staging -type f -name '*.graphql' -exec sed -i '' "s/a2b8dbc3427b41a9899e11671c2422c7/$arg1/g" {} +
find $staging -type f -name '*.graphql' -exec sed -i '' "s/ba381b0cc764c4c9a187b716ae94ed96/$arg2/g" {} +
find $staging -type f -name '*.graphql' -exec sed -i '' "s/cd637bc32c364580be5cc28396d3dee8/$arg3/g" {} +
find $staging -type f -name '*.graphql' -exec sed -i '' "s/d741787fe14145d79bbdd8ad8057ca28/$arg4/g" {} +

# database
cp $staging/database/models/entity.js $project_root/database/models/$arg1.js
cp $staging/database/controllers/entity.js $project_root/database/controllers/$arg1.js
cp $staging/database/interfaces/graphql/entities/entity.js $project_root/database/interfaces/graphql/entities/$arg1.js
cp $staging/database/interfaces/graphql/mutations/entity.js $project_root/database/interfaces/graphql/mutations/$arg1.js
cp $staging/database/interfaces/graphql/queries/entity.js $project_root/database/interfaces/graphql/queries/$arg1.js

mkdir -p $project_root/database/interfaces/graphql/operations/$arg1
cp $staging/database/interfaces/graphql/operations/entity/read.graphql $project_root/database/interfaces/graphql/operations/$arg1/read.graphql
cp $staging/database/interfaces/graphql/operations/entity/index.js $project_root/database/interfaces/graphql/operations/$arg1/index.js
cp $staging/database/interfaces/graphql/operations/entity/create.graphql $project_root/database/interfaces/graphql/operations/$arg1/create.graphql
cp $staging/database/interfaces/graphql/operations/entity/update.graphql $project_root/database/interfaces/graphql/operations/$arg1/update.graphql
cp $staging/database/interfaces/graphql/operations/entity/delete.graphql $project_root/database/interfaces/graphql/operations/$arg1/delete.graphql
cp $staging/database/interfaces/graphql/operations/entity/count.graphql $project_root/database/interfaces/graphql/operations/$arg1/count.graphql

# system
cp $staging/system/models/entity.js $project_root/system/models/$arg1.js
cp $staging/system/controllers/entity.js $project_root/system/controllers/$arg1.js
cp $staging/system/interfaces/graphql/entities/entity.js $project_root/system/interfaces/graphql/entities/$arg1.js
cp $staging/system/interfaces/graphql/mutations/entity.js $project_root/system/interfaces/graphql/mutations/$arg1.js
cp $staging/system/interfaces/graphql/queries/entity.js $project_root/system/interfaces/graphql/queries/$arg1.js

# structure
mkdir -p $project_root/structure/entities/$arg1
mkdir -p $project_root/structure/entities/$arg1/database
mkdir -p $project_root/structure/entities/$arg1/system
cp $staging/structure/entities/entity/database/graphql.js $project_root/structure/entities/$arg1/database/graphql.js
cp $staging/structure/entities/entity/database/index.js $project_root/structure/entities/$arg1/database/index.js
cp $staging/structure/entities/entity/database/sql.js $project_root/structure/entities/$arg1/database/sql.js
cp $staging/structure/entities/entity/index.js $project_root/structure/entities/$arg1/index.js
cp $staging/structure/entities/entity/system/graphql.js $project_root/structure/entities/$arg1/system/graphql.js
cp $staging/structure/entities/entity/system/index.js $project_root/structure/entities/$arg1/system/index.js

rm -rf $staging
