// relationships are defined using the graphql type constant

// ytitne
import { TYPE__GRAPHQL__DATABASE__YTITNE__STRUCTURE } from "./ytitne/database/graphql.js";
// entity1
import { TYPE__GRAPHQL__DATABASE__ENTITY1__STRUCTURE } from "./entity1/database/graphql.js";
// entity2
import { TYPE__GRAPHQL__DATABASE__ENTITY2__STRUCTURE } from "./entity2/database/graphql.js";

/*
	ytitne <-> entity1
	ytitne <-> entity2
	entity1 <-> entity2
*/
const DATABASE_RELATIONSHIP_STRUCTURE = {
	[TYPE__GRAPHQL__DATABASE__YTITNE__STRUCTURE]: [TYPE__GRAPHQL__DATABASE__ENTITY1__STRUCTURE, TYPE__GRAPHQL__DATABASE__ENTITY2__STRUCTURE],
	[TYPE__GRAPHQL__DATABASE__ENTITY1__STRUCTURE]: [TYPE__GRAPHQL__DATABASE__YTITNE__STRUCTURE, TYPE__GRAPHQL__DATABASE__ENTITY2__STRUCTURE],
	[TYPE__GRAPHQL__DATABASE__ENTITY2__STRUCTURE]: [TYPE__GRAPHQL__DATABASE__YTITNE__STRUCTURE, TYPE__GRAPHQL__DATABASE__ENTITY1__STRUCTURE],
};

const SYSTEM_RELATIONSHIP_STRUCTURE = DATABASE_RELATIONSHIP_STRUCTURE;

export { DATABASE_RELATIONSHIP_STRUCTURE, SYSTEM_RELATIONSHIP_STRUCTURE };
